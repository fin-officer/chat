---
- name: Test Protocol Integration REST API
  hosts: all
  become: false
  vars:
    api_host: "http://localhost:8000"
  tasks:
    - name: Wait for API to be available
      uri:
        url: "{{ api_host }}/health"
        method: GET
      register: health_check
      until: health_check.status == 200
      retries: 10
      delay: 2

    - name: Test list protocols endpoint
      uri:
        url: "{{ api_host }}/protocols"
        method: GET
        return_content: yes
      register: protocols_response
      failed_when: protocols_response.status != 200

    - name: Print protocols response
      debug:
        var: protocols_response.json

    - name: Activate chat protocol
      uri:
        url: "{{ api_host }}/protocols/chat/activate"
        method: POST
        return_content: yes
      register: activate_response
      failed_when: activate_response.status != 200 or activate_response.json.status != "active"

    - name: Print activate response
      debug:
        var: activate_response.json

    - name: Test send message endpoint
      uri:
        url: "{{ api_host }}/send"
        method: POST
        body_format: json
        body:
          content: "Hello, how are you?"
          protocol: "chat"
        return_content: yes
      register: send_response
      failed_when: send_response.status != 200 or send_response.json.status != "queued"

    - name: Print send response
      debug:
        var: send_response.json

    - name: Test simulate message endpoint
      uri:
        url: "{{ api_host }}/simulate"
        method: POST
        body_format: json
        body:
          content: "Hi there!"
          protocol: "chat"
        return_content: yes
      register: simulate_response
      failed_when: simulate_response.status != 200 or "original_message" not in simulate_response.json or "llm_response" not in simulate_response.json

    - name: Print simulate response
      debug:
        var: simulate_response.json

    - name: Deactivate chat protocol
      uri:
        url: "{{ api_host }}/protocols/chat/deactivate"
        method: POST
        return_content: yes
      register: deactivate_response
      failed_when: deactivate_response.status != 200 or deactivate_response.json.status != "inactive"

    - name: Print deactivate response
      debug:
        var: deactivate_response.json